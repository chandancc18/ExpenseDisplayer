{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chhap\\\\OneDrive\\\\Desktop\\\\React\\\\firstProject\\\\src\\\\components\\\\Expenses\\\\Expense.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Expense.css\";\nimport Card from \"../UI/Card\";\nimport ExpenseItem from \"./ExpenseItems\";\nimport ExpenseFilter from \"./ExpenseFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Expense(props) {\n  _s();\n\n  const [originalYear, setFilteredYear] = useState(\"2020\");\n  const filteredExpense = props.eArray.filter(expense => {\n    return expense.date.getFullYear().toString() === originalYear;\n  });\n\n  const newYearHandler = year => {\n    setFilteredYear(year);\n    console.log(originalYear);\n  };\n\n  let expenseContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"You saved Money, this month . No expenses Found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 24\n  }, this);\n\n  if (filteredExpense.length > 0) {\n    expenseContent = filteredExpense.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n        selected: originalYear,\n        onChangeFilter: newYearHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), expenseContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Expense, \"Qrd6mKVr08uJDeHfowLJBSCh0qE=\");\n\n_c = Expense;\nexport default Expense;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expense\");","map":{"version":3,"sources":["C:/Users/chhap/OneDrive/Desktop/React/firstProject/src/components/Expenses/Expense.js"],"names":["React","useState","Card","ExpenseItem","ExpenseFilter","Expense","props","originalYear","setFilteredYear","filteredExpense","eArray","filter","expense","date","getFullYear","toString","newYearHandler","year","console","log","expenseContent","length","map","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,eAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACtB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;AAEA,QAAMQ,eAAe,GAAGH,KAAK,CAACI,MAAN,CAAaC,MAAb,CAAqBC,OAAD,IAAa;AACpD,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CR,YAAjD;AACJ,GAFuB,CAAxB;;AAIA,QAAMS,cAAc,GAAIC,IAAD,IAAU;AAC/BT,IAAAA,eAAe,CAACS,IAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYZ,YAAZ;AACD,GAHD;;AAKA,MAAIa,cAAc,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAArB;;AAEA,MAAGX,eAAe,CAACY,MAAhB,GAAyB,CAA5B,EAA8B;AAC5BD,IAAAA,cAAc,GAAIX,eAAe,CAACa,GAAhB,CAAqBV,OAAD,iBACpC,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACW,KAFjB;AAGE,MAAA,MAAM,EAAEX,OAAO,CAACY,MAHlB;AAIE,MAAA,IAAI,EAAEZ,OAAO,CAACC;AAJhB,OACOD,OAAO,CAACa,EADf;AAAA;AAAA;AAAA;AAAA,YADgB,CAAlB;AAQD;;AACD,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,aAAD;AACE,QAAA,QAAQ,EAAElB,YADZ;AAEE,QAAA,cAAc,EAAES;AAFlB;AAAA;AAAA;AAAA;AAAA,cADF,EAKGI,cALH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GApCQf,O;;KAAAA,O;AAsCT,eAAeA,OAAf","sourcesContent":["import React ,{ useState } from \"react\";\r\nimport \"./Expense.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpenseItem from \"./ExpenseItems\";\r\nimport ExpenseFilter from \"./ExpenseFilter\";\r\n\r\n\r\nfunction Expense(props) {\r\n  const [originalYear, setFilteredYear] = useState(\"2020\");\r\n\r\n  const filteredExpense = props.eArray.filter((expense) => {\r\n       return expense.date.getFullYear().toString() === originalYear\r\n  })\r\n\r\n  const newYearHandler = (year) => {\r\n    setFilteredYear(year);\r\n    console.log(originalYear);\r\n  };\r\n\r\n  let expenseContent = <p>You saved Money, this month . No expenses Found</p>\r\n\r\n  if(filteredExpense.length > 0){\r\n    expenseContent =  filteredExpense.map((expense) => (\r\n      <ExpenseItem\r\n        key={expense.id}\r\n        title={expense.title}\r\n        amount={expense.amount}\r\n        date={expense.date}\r\n            />\r\n    ));\r\n  }\r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpenseFilter\r\n          selected={originalYear}\r\n          onChangeFilter={newYearHandler}\r\n        />\r\n        {expenseContent}\r\n        \r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Expense;\r\n"]},"metadata":{},"sourceType":"module"}